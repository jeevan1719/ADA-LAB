#include<stdio.h>
#include<time.h>
void merge(int arr[],int l,int mid,int h)
{
int n1=mid-l+1;
int n2=h-mid;
int a[n1],b[n2];
for(int i=0;i<n1;i++)
{
a[i]=arr[l+i];
}
for(int j=0;j<n2;j++)
{
b[j]=arr[mid+1+j];
}
int i=0,j=0,k=l;
while(i<n1 && j<n2)
{

if(a[i]<=b[j])
{
arr[k]=a[i];
i++;
}
else{
arr[k]=b[j];
j++;
}
k++;
}
while(i<n1)
{
arr[k]=a[i];
i++;
k++;
}

while(j<n2)
{
arr[k]=b[j];
j++;
k++;
}
}

void mergesort(int arr[],int l,int h)
{
if(l<h)
{
int mid=(l+h)/2;
mergesort(arr,l,mid);
mergesort(arr,mid+1,h);
merge(arr,l,mid,h);
}
}

int main()
{
int i,j,n,temp,arr[10000];
clock_t st,et;
double time_taken;
printf("Enter n value:");
scanf("%d",&n);
for(i=0;i<n;i++)
{
arr[i]=rand()%10000;
}
//printf("The array elements before sorting:");
//for(i=0;i<n;i++)
//{
//printf("%d\n",arr[i]);
//}
st=clock();
mergesort(arr,0,n-1);
et=clock();
//printf("Sorted array is:\n");
//for(i=0;i<n;i++){
//printf("%d\n",arr[i]);
//}

time_taken=((double)(et-st)/CLOCKS_PER_SEC);
printf("Time taken:%f",time_taken);
}